[
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "common.log",
        "description": "common.log",
        "isExtraImport": true,
        "detail": "common.log",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "common.log",
        "description": "common.log",
        "isExtraImport": true,
        "detail": "common.log",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "common.log",
        "description": "common.log",
        "isExtraImport": true,
        "detail": "common.log",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "common.log",
        "description": "common.log",
        "isExtraImport": true,
        "detail": "common.log",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "common.log",
        "description": "common.log",
        "isExtraImport": true,
        "detail": "common.log",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "common.log",
        "description": "common.log",
        "isExtraImport": true,
        "detail": "common.log",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "common.log",
        "description": "common.log",
        "isExtraImport": true,
        "detail": "common.log",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "common.log",
        "description": "common.log",
        "isExtraImport": true,
        "detail": "common.log",
        "documentation": {}
    },
    {
        "label": "makeGroupReq",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "EthZero",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "EthZero",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "is_eth_address",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "makeGroupReq",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "EthZero",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "makeGroupReq",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "EthZero",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "makeGroupReq",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "EthZero",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "is_eth_address",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "EthZero",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "makeGroupReq",
        "importPath": "plugins.plugin_chat2db.comm",
        "description": "plugins.plugin_chat2db.comm",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.comm",
        "documentation": {}
    },
    {
        "label": "quote",
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "isExtraImport": true,
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "ApiGroupx",
        "importPath": "plugins.plugin_chat2db.api_groupx",
        "description": "plugins.plugin_chat2db.api_groupx",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.api_groupx",
        "documentation": {}
    },
    {
        "label": "ApiGroupx",
        "importPath": "plugins.plugin_chat2db.api_groupx",
        "description": "plugins.plugin_chat2db.api_groupx",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.api_groupx",
        "documentation": {}
    },
    {
        "label": "ApiGroupx",
        "importPath": "plugins.plugin_chat2db.api_groupx",
        "description": "plugins.plugin_chat2db.api_groupx",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.api_groupx",
        "documentation": {}
    },
    {
        "label": "ApiGroupx",
        "importPath": "plugins.plugin_chat2db.api_groupx",
        "description": "plugins.plugin_chat2db.api_groupx",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.api_groupx",
        "documentation": {}
    },
    {
        "label": "ApiGroupx",
        "importPath": "plugins.plugin_chat2db.api_groupx",
        "description": "plugins.plugin_chat2db.api_groupx",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.api_groupx",
        "documentation": {}
    },
    {
        "label": "sqlite3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlite3",
        "description": "sqlite3",
        "detail": "sqlite3",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "traceback",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "traceback",
        "description": "traceback",
        "detail": "traceback",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "LLMChain",
        "importPath": "chatgpt_tool_hub.chains.llm",
        "description": "chatgpt_tool_hub.chains.llm",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.chains.llm",
        "documentation": {}
    },
    {
        "label": "LLMChain",
        "importPath": "chatgpt_tool_hub.chains.llm",
        "description": "chatgpt_tool_hub.chains.llm",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.chains.llm",
        "documentation": {}
    },
    {
        "label": "LLMChain",
        "importPath": "chatgpt_tool_hub.chains.llm",
        "description": "chatgpt_tool_hub.chains.llm",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.chains.llm",
        "documentation": {}
    },
    {
        "label": "build_model_params",
        "importPath": "chatgpt_tool_hub.models",
        "description": "chatgpt_tool_hub.models",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.models",
        "documentation": {}
    },
    {
        "label": "build_model_params",
        "importPath": "chatgpt_tool_hub.models",
        "description": "chatgpt_tool_hub.models",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.models",
        "documentation": {}
    },
    {
        "label": "build_model_params",
        "importPath": "chatgpt_tool_hub.models",
        "description": "chatgpt_tool_hub.models",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.models",
        "documentation": {}
    },
    {
        "label": "ModelFactory",
        "importPath": "chatgpt_tool_hub.models.model_factory",
        "description": "chatgpt_tool_hub.models.model_factory",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.models.model_factory",
        "documentation": {}
    },
    {
        "label": "ModelFactory",
        "importPath": "chatgpt_tool_hub.models.model_factory",
        "description": "chatgpt_tool_hub.models.model_factory",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.models.model_factory",
        "documentation": {}
    },
    {
        "label": "ModelFactory",
        "importPath": "chatgpt_tool_hub.models.model_factory",
        "description": "chatgpt_tool_hub.models.model_factory",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.models.model_factory",
        "documentation": {}
    },
    {
        "label": "PromptTemplate",
        "importPath": "chatgpt_tool_hub.prompts",
        "description": "chatgpt_tool_hub.prompts",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.prompts",
        "documentation": {}
    },
    {
        "label": "PromptTemplate",
        "importPath": "chatgpt_tool_hub.prompts",
        "description": "chatgpt_tool_hub.prompts",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.prompts",
        "documentation": {}
    },
    {
        "label": "PromptTemplate",
        "importPath": "chatgpt_tool_hub.prompts",
        "description": "chatgpt_tool_hub.prompts",
        "isExtraImport": true,
        "detail": "chatgpt_tool_hub.prompts",
        "documentation": {}
    },
    {
        "label": "profile",
        "importPath": "memory_profiler",
        "description": "memory_profiler",
        "isExtraImport": true,
        "detail": "memory_profiler",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageDraw",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageFont",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageDraw",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageFont",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "plugins",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "plugins",
        "description": "plugins",
        "detail": "plugins",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "plugins",
        "description": "plugins",
        "isExtraImport": true,
        "detail": "plugins",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "plugins",
        "description": "plugins",
        "isExtraImport": true,
        "detail": "plugins",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "plugins",
        "description": "plugins",
        "isExtraImport": true,
        "detail": "plugins",
        "documentation": {}
    },
    {
        "label": "bot_factory",
        "importPath": "bot",
        "description": "bot",
        "isExtraImport": true,
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "bot_factory",
        "importPath": "bot",
        "description": "bot",
        "isExtraImport": true,
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "bot_factory",
        "importPath": "bot",
        "description": "bot",
        "isExtraImport": true,
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "Bridge",
        "importPath": "bridge.bridge",
        "description": "bridge.bridge",
        "isExtraImport": true,
        "detail": "bridge.bridge",
        "documentation": {}
    },
    {
        "label": "Bridge",
        "importPath": "bridge.bridge",
        "description": "bridge.bridge",
        "isExtraImport": true,
        "detail": "bridge.bridge",
        "documentation": {}
    },
    {
        "label": "Bridge",
        "importPath": "bridge.bridge",
        "description": "bridge.bridge",
        "isExtraImport": true,
        "detail": "bridge.bridge",
        "documentation": {}
    },
    {
        "label": "ContextType",
        "importPath": "bridge.context",
        "description": "bridge.context",
        "isExtraImport": true,
        "detail": "bridge.context",
        "documentation": {}
    },
    {
        "label": "ContextType",
        "importPath": "bridge.context",
        "description": "bridge.context",
        "isExtraImport": true,
        "detail": "bridge.context",
        "documentation": {}
    },
    {
        "label": "ContextType",
        "importPath": "bridge.context",
        "description": "bridge.context",
        "isExtraImport": true,
        "detail": "bridge.context",
        "documentation": {}
    },
    {
        "label": "Reply",
        "importPath": "bridge.reply",
        "description": "bridge.reply",
        "isExtraImport": true,
        "detail": "bridge.reply",
        "documentation": {}
    },
    {
        "label": "ReplyType",
        "importPath": "bridge.reply",
        "description": "bridge.reply",
        "isExtraImport": true,
        "detail": "bridge.reply",
        "documentation": {}
    },
    {
        "label": "Reply",
        "importPath": "bridge.reply",
        "description": "bridge.reply",
        "isExtraImport": true,
        "detail": "bridge.reply",
        "documentation": {}
    },
    {
        "label": "ReplyType",
        "importPath": "bridge.reply",
        "description": "bridge.reply",
        "isExtraImport": true,
        "detail": "bridge.reply",
        "documentation": {}
    },
    {
        "label": "Reply",
        "importPath": "bridge.reply",
        "description": "bridge.reply",
        "isExtraImport": true,
        "detail": "bridge.reply",
        "documentation": {}
    },
    {
        "label": "ReplyType",
        "importPath": "bridge.reply",
        "description": "bridge.reply",
        "isExtraImport": true,
        "detail": "bridge.reply",
        "documentation": {}
    },
    {
        "label": "check_contain",
        "importPath": "channel.chat_channel",
        "description": "channel.chat_channel",
        "isExtraImport": true,
        "detail": "channel.chat_channel",
        "documentation": {}
    },
    {
        "label": "check_prefix",
        "importPath": "channel.chat_channel",
        "description": "channel.chat_channel",
        "isExtraImport": true,
        "detail": "channel.chat_channel",
        "documentation": {}
    },
    {
        "label": "check_contain",
        "importPath": "channel.chat_channel",
        "description": "channel.chat_channel",
        "isExtraImport": true,
        "detail": "channel.chat_channel",
        "documentation": {}
    },
    {
        "label": "check_prefix",
        "importPath": "channel.chat_channel",
        "description": "channel.chat_channel",
        "isExtraImport": true,
        "detail": "channel.chat_channel",
        "documentation": {}
    },
    {
        "label": "check_contain",
        "importPath": "channel.chat_channel",
        "description": "channel.chat_channel",
        "isExtraImport": true,
        "detail": "channel.chat_channel",
        "documentation": {}
    },
    {
        "label": "check_prefix",
        "importPath": "channel.chat_channel",
        "description": "channel.chat_channel",
        "isExtraImport": true,
        "detail": "channel.chat_channel",
        "documentation": {}
    },
    {
        "label": "ChatMessage",
        "importPath": "channel.chat_message",
        "description": "channel.chat_message",
        "isExtraImport": true,
        "detail": "channel.chat_message",
        "documentation": {}
    },
    {
        "label": "ChatMessage",
        "importPath": "channel.chat_message",
        "description": "channel.chat_message",
        "isExtraImport": true,
        "detail": "channel.chat_message",
        "documentation": {}
    },
    {
        "label": "ChatMessage",
        "importPath": "channel.chat_message",
        "description": "channel.chat_message",
        "isExtraImport": true,
        "detail": "channel.chat_message",
        "documentation": {}
    },
    {
        "label": "const",
        "importPath": "common",
        "description": "common",
        "isExtraImport": true,
        "detail": "common",
        "documentation": {}
    },
    {
        "label": "const",
        "importPath": "common",
        "description": "common",
        "isExtraImport": true,
        "detail": "common",
        "documentation": {}
    },
    {
        "label": "const",
        "importPath": "common",
        "description": "common",
        "isExtraImport": true,
        "detail": "common",
        "documentation": {}
    },
    {
        "label": "TmpDir",
        "importPath": "common.tmp_dir",
        "description": "common.tmp_dir",
        "isExtraImport": true,
        "detail": "common.tmp_dir",
        "documentation": {}
    },
    {
        "label": "TmpDir",
        "importPath": "common.tmp_dir",
        "description": "common.tmp_dir",
        "isExtraImport": true,
        "detail": "common.tmp_dir",
        "documentation": {}
    },
    {
        "label": "TmpDir",
        "importPath": "common.tmp_dir",
        "description": "common.tmp_dir",
        "isExtraImport": true,
        "detail": "common.tmp_dir",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "config",
        "description": "config",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "conf",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "global_config",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "load_config",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "conf",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "global_config",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "load_config",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "conf",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "global_config",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "load_config",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "itchat",
        "importPath": "lib",
        "description": "lib",
        "isExtraImport": true,
        "detail": "lib",
        "documentation": {}
    },
    {
        "label": "itchat",
        "importPath": "lib",
        "description": "lib",
        "isExtraImport": true,
        "detail": "lib",
        "documentation": {}
    },
    {
        "label": "itchat",
        "importPath": "lib",
        "description": "lib",
        "isExtraImport": true,
        "detail": "lib",
        "documentation": {}
    },
    {
        "label": "itchat",
        "importPath": "lib",
        "description": "lib",
        "isExtraImport": true,
        "detail": "lib",
        "documentation": {}
    },
    {
        "label": "itchat",
        "importPath": "lib",
        "description": "lib",
        "isExtraImport": true,
        "detail": "lib",
        "documentation": {}
    },
    {
        "label": "itchat",
        "importPath": "lib",
        "description": "lib",
        "isExtraImport": true,
        "detail": "lib",
        "documentation": {}
    },
    {
        "label": "update_friend",
        "importPath": "lib.itchat.async_components.contact",
        "description": "lib.itchat.async_components.contact",
        "isExtraImport": true,
        "detail": "lib.itchat.async_components.contact",
        "documentation": {}
    },
    {
        "label": "FRIENDS",
        "importPath": "lib.itchat.content",
        "description": "lib.itchat.content",
        "isExtraImport": true,
        "detail": "lib.itchat.content",
        "documentation": {}
    },
    {
        "label": "FRIENDS",
        "importPath": "lib.itchat.content",
        "description": "lib.itchat.content",
        "isExtraImport": true,
        "detail": "lib.itchat.content",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "lib.itchat.content",
        "description": "lib.itchat.content",
        "isExtraImport": true,
        "detail": "lib.itchat.content",
        "documentation": {}
    },
    {
        "label": "ApiTencent",
        "importPath": "plugins.plugin_chat2db.api_tentcent",
        "description": "plugins.plugin_chat2db.api_tentcent",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.api_tentcent",
        "documentation": {}
    },
    {
        "label": "ApiTencent",
        "importPath": "plugins.plugin_chat2db.api_tentcent",
        "description": "plugins.plugin_chat2db.api_tentcent",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.api_tentcent",
        "documentation": {}
    },
    {
        "label": "ApiTencent",
        "importPath": "plugins.plugin_chat2db.api_tentcent",
        "description": "plugins.plugin_chat2db.api_tentcent",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.api_tentcent",
        "documentation": {}
    },
    {
        "label": "ApiTencent",
        "importPath": "plugins.plugin_chat2db.api_tentcent",
        "description": "plugins.plugin_chat2db.api_tentcent",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.api_tentcent",
        "documentation": {}
    },
    {
        "label": "chat2db_refresh_knowledge",
        "importPath": "plugins.plugin_chat2db.chat2db_knowledge",
        "description": "plugins.plugin_chat2db.chat2db_knowledge",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.chat2db_knowledge",
        "documentation": {}
    },
    {
        "label": "CustomReply",
        "importPath": "plugins.plugin_chat2db.chat2db_reply",
        "description": "plugins.plugin_chat2db.chat2db_reply",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.chat2db_reply",
        "documentation": {}
    },
    {
        "label": "HeadImgManager",
        "importPath": "plugins.plugin_chat2db.head_img_manager",
        "description": "plugins.plugin_chat2db.head_img_manager",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.head_img_manager",
        "documentation": {}
    },
    {
        "label": "HeadImgManager",
        "importPath": "plugins.plugin_chat2db.head_img_manager",
        "description": "plugins.plugin_chat2db.head_img_manager",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.head_img_manager",
        "documentation": {}
    },
    {
        "label": "HeadImgManager",
        "importPath": "plugins.plugin_chat2db.head_img_manager",
        "description": "plugins.plugin_chat2db.head_img_manager",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.head_img_manager",
        "documentation": {}
    },
    {
        "label": "HeadImgManager",
        "importPath": "plugins.plugin_chat2db.head_img_manager",
        "description": "plugins.plugin_chat2db.head_img_manager",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.head_img_manager",
        "documentation": {}
    },
    {
        "label": "UserRefreshThread",
        "importPath": "plugins.plugin_chat2db.user_refresh_thread",
        "description": "plugins.plugin_chat2db.user_refresh_thread",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.user_refresh_thread",
        "documentation": {}
    },
    {
        "label": "UserRefreshThread",
        "importPath": "plugins.plugin_chat2db.user_refresh_thread",
        "description": "plugins.plugin_chat2db.user_refresh_thread",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.user_refresh_thread",
        "documentation": {}
    },
    {
        "label": "UserRefreshThread",
        "importPath": "plugins.plugin_chat2db.user_refresh_thread",
        "description": "plugins.plugin_chat2db.user_refresh_thread",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.user_refresh_thread",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "importPath": "plugins.plugin_chat2db.UserManager",
        "description": "plugins.plugin_chat2db.UserManager",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.UserManager",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "importPath": "plugins.plugin_chat2db.UserManager",
        "description": "plugins.plugin_chat2db.UserManager",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.UserManager",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "importPath": "plugins.plugin_chat2db.UserManager",
        "description": "plugins.plugin_chat2db.UserManager",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.UserManager",
        "documentation": {}
    },
    {
        "label": "html_to_image",
        "importPath": "plugins.plugin_report_work.mixedtext_to_image",
        "description": "plugins.plugin_report_work.mixedtext_to_image",
        "isExtraImport": true,
        "detail": "plugins.plugin_report_work.mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "is_html",
        "importPath": "plugins.plugin_report_work.mixedtext_to_image",
        "description": "plugins.plugin_report_work.mixedtext_to_image",
        "isExtraImport": true,
        "detail": "plugins.plugin_report_work.mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "markdown_to_html",
        "importPath": "plugins.plugin_report_work.mixedtext_to_image",
        "description": "plugins.plugin_report_work.mixedtext_to_image",
        "isExtraImport": true,
        "detail": "plugins.plugin_report_work.mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "pick_tables_from_markdown",
        "importPath": "plugins.plugin_report_work.pick_tables_markdown",
        "description": "plugins.plugin_report_work.pick_tables_markdown",
        "isExtraImport": true,
        "detail": "plugins.plugin_report_work.pick_tables_markdown",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "markdown",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "markdown",
        "description": "markdown",
        "detail": "markdown",
        "documentation": {}
    },
    {
        "label": "imgkit",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "imgkit",
        "description": "imgkit",
        "detail": "imgkit",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "md5",
        "importPath": "hashlib",
        "description": "hashlib",
        "isExtraImport": true,
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "MyFileStory",
        "importPath": "plugins.plugin_chat2db.file_store",
        "description": "plugins.plugin_chat2db.file_store",
        "isExtraImport": true,
        "detail": "plugins.plugin_chat2db.file_store",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "arrow",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "arrow",
        "description": "arrow",
        "detail": "arrow",
        "documentation": {}
    },
    {
        "label": "threading",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "threading",
        "description": "threading",
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "ApiGroupx",
        "kind": 6,
        "importPath": "api_groupx",
        "description": "api_groupx",
        "peekOfCode": "class ApiGroupx:\n    def __init__(self, host) -> None:\n        self.groupxHostUrl = host\n    def post_chat_record(self, account, msg_json):\n        account = account.strip() if account else \"0x0000000000000000000000000000000000000000\"\n        post_url = f\"{self.groupxHostUrl}/v1/chat/{account}\"\n        logger.info(\"post url: {}\".format(post_url))\n        try:\n            response = requests.post(\n                post_url, json=msg_json, verify=False)",
        "detail": "api_groupx",
        "documentation": {}
    },
    {
        "label": "ApiTencent",
        "kind": 6,
        "importPath": "api_tentcent",
        "description": "api_tentcent",
        "peekOfCode": "class ApiTencent(object):\n    def __init__(self, groupxHostUrl) -> None:\n        self.groupxHostUrl = groupxHostUrl\n        self.groupx = ApiGroupx(groupxHostUrl)\n    def qcloud_upload_bytes(self, data) :\n        files = {'file': data}  # 'file' 是服务器上接受文件的字段名\n        cos_policy= self.groupx.qcloud_get_cos_policy(\"jpg\")\n        formData = {\n            \"key\": cos_policy['cosKey'],\n            \"policy\": cos_policy['policy'],",
        "detail": "api_tentcent",
        "documentation": {}
    },
    {
        "label": "Chat2db",
        "kind": 6,
        "importPath": "chat2db",
        "description": "chat2db",
        "peekOfCode": "class Chat2db(Plugin):\n    def __init__(self):\n        super().__init__()\n        self.config = super().load_config()\n        if not self.config:\n            # 未加载到配置，使用模板中的配置\n            self.config = self._load_config_template()\n        if self.config:\n            self.robot_account = self.config.get(\"account\")\n            self.robot_name = self.config.get(\"name\")",
        "detail": "chat2db",
        "documentation": {}
    },
    {
        "label": "chat2db_refresh_knowledge",
        "kind": 2,
        "importPath": "chat2db_knowledge",
        "description": "chat2db_knowledge",
        "peekOfCode": "def chat2db_refresh_knowledge(groupx, robot_account, user_manager, e_context: EventContext):\n    try:\n        ctx = e_context['context']\n        if ctx.type == ContextType.TEXT:\n            msg = ctx.get(\"msg\")\n            isgroup =  ctx.get(\"isgroup\", False)\n            if isgroup: user_UserName = msg.actual_user_id\n            else: user_UserName= msg._rawmsg.user.UserName\n            session_id = ctx.get(\"session_id\")\n            all_sessions = Bridge().get_bot(\"chat\").sessions",
        "detail": "chat2db_knowledge",
        "documentation": {}
    },
    {
        "label": "CustomReply",
        "kind": 6,
        "importPath": "chat2db_reply",
        "description": "chat2db_reply",
        "peekOfCode": "class CustomReply:\n    def __init__(self, config, groupx, user_manager):\n        self.config = config\n        self.groupx = groupx\n        self.user_manager = user_manager\n        self.robot_account =  self.config.get(\"account\")\n        self.robot_name =  self.config.get(\"name\")\n        self.robot_desc =  self.config.get(\"description\")\n        self.patpat_message =  self.config.get(\"patpat_message\") #拍拍是否使用配置信息\n    def reply_join_group(self, e_context: EventContext):",
        "detail": "chat2db_reply",
        "documentation": {}
    },
    {
        "label": "makeGroupReq",
        "kind": 2,
        "importPath": "comm",
        "description": "comm",
        "peekOfCode": "def makeGroupReq(account,payload):\n    json_data = {\n        'payload': payload,\n        \"params\": {\n                \"addr\": account if account else \"0x0000000000000000000000000000000000000000\",\n                \"random\": \"a9a58d316a16206ca2529720d01f8a9d10779eb330902f4ec05cf358a3418a9f\",\n                \"nonce\": \"1a9b1b1d9e854196143504b776b65e9fb5c87fe4930466a8fe68763fa6e48aed\",\n                \"ts\": \"1680592645793\",\n                \"hash\": \"0xc324d54dc3f613b8b33ce60d3085b5fc16b9012fa1df733361b370fec663bc67\",\n                \"method\": 2,",
        "detail": "comm",
        "documentation": {}
    },
    {
        "label": "is_eth_address",
        "kind": 2,
        "importPath": "comm",
        "description": "comm",
        "peekOfCode": "def is_eth_address(address):\n    # 以太坊地址的正则表达式\n    ethereum_address_pattern = re.compile(r'^0x[1-9a-fA-F][0-9a-fA-F]{39}$')\n    # 使用正则表达式匹配\n    return bool(ethereum_address_pattern.match(address))\ndef test():\n    # 示例用法\n    valid_address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\"\n    invalid_address_all_zeros = \"0x0000000000000000000000000000000000000000\"\n    invalid_address_starting_with_zero = \"0x0123456789abcdef0123456789abcdef01234567\"",
        "detail": "comm",
        "documentation": {}
    },
    {
        "label": "test",
        "kind": 2,
        "importPath": "comm",
        "description": "comm",
        "peekOfCode": "def test():\n    # 示例用法\n    valid_address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\"\n    invalid_address_all_zeros = \"0x0000000000000000000000000000000000000000\"\n    invalid_address_starting_with_zero = \"0x0123456789abcdef0123456789abcdef01234567\"\n    print(f\"{valid_address} 是否有效：{is_eth_address(valid_address)}\")\n    print(f\"{invalid_address_all_zeros} 是否有效：{is_eth_address(invalid_address_all_zeros)}\")\n    print(f\"{invalid_address_starting_with_zero} 是否有效：{is_eth_address(invalid_address_starting_with_zero)}\")\n    # 0x742d35Cc6634C0532925a3b844Bc454e4438f44e 是否有效：True\n    # 0x0000000000000000000000000000000000000000 是否有效：False",
        "detail": "comm",
        "documentation": {}
    },
    {
        "label": "EthZero",
        "kind": 5,
        "importPath": "comm",
        "description": "comm",
        "peekOfCode": "EthZero = \"0x0000000000000000000000000000000000000000\"",
        "detail": "comm",
        "documentation": {}
    },
    {
        "label": "is_html",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def is_html(content):\n    try:\n        soup = BeautifulSoup(content, 'html.parser')\n        return True\n    except:\n        return False\ndef is_markdown_table(content):\n    html = markdown.markdown(content, extensions=[\"tables\"])\n    soup = BeautifulSoup(html, \"html.parser\")\n    return soup.find(\"table\") is not None",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "is_markdown_table",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def is_markdown_table(content):\n    html = markdown.markdown(content, extensions=[\"tables\"])\n    soup = BeautifulSoup(html, \"html.parser\")\n    return soup.find(\"table\") is not None\ndef is_markdown(content):\n    markdown_pattern = r'[*_~`#>]|\\[(.*?)\\]\\((.*?)\\)'\n    match = re.search(markdown_pattern, content)\n    return bool(match)\ndef get_text_width2(html, font):\n    html = html.encode(\"utf-8\").decode(\"latin1\")",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "is_markdown",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def is_markdown(content):\n    markdown_pattern = r'[*_~`#>]|\\[(.*?)\\]\\((.*?)\\)'\n    match = re.search(markdown_pattern, content)\n    return bool(match)\ndef get_text_width2(html, font):\n    html = html.encode(\"utf-8\").decode(\"latin1\")\n    # html = re.sub(r'<[^>]*>', '\\r\\n', html)\n    img = Image.new('RGB', (800, 1200), color='white')\n    draw = ImageDraw.Draw(img)\n    box = draw.textbbox((0, 0), html, font=font)",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "get_text_width2",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def get_text_width2(html, font):\n    html = html.encode(\"utf-8\").decode(\"latin1\")\n    # html = re.sub(r'<[^>]*>', '\\r\\n', html)\n    img = Image.new('RGB', (800, 1200), color='white')\n    draw = ImageDraw.Draw(img)\n    box = draw.textbbox((0, 0), html, font=font)\n    # text_width, text_height = draw.textbbox((0, 0), html, font=font)\n    x = (img.width - box[2])\n    y = (img.height - box[3])\n    print(f\"get_text_width2:宽{x} - 高{y}\",x, y)",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "markdown_to_html",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def markdown_to_html(content):\n    #content = \"# 这是一个标题\\n这是一段正文。\"\n    html_text = markdown.markdown(content, extensions=[\"tables\"])\n    print(html_text)\n    return html_text\ndef html_to_image(html_content, output_path='output.png'):\n    try:\n        font = ImageFont.load_default()  # You can use a custom font if needed\n        # 根据字体及大小计算文字占用的长宽\n        # size = font.getbbox('test')",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "html_to_image",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def html_to_image(html_content, output_path='output.png'):\n    try:\n        font = ImageFont.load_default()  # You can use a custom font if needed\n        # 根据字体及大小计算文字占用的长宽\n        # size = font.getbbox('test')\n        # font_size = size[1]\n        # print(\"font_size:\", font_size)\n        # # 根据字体及大小计算文字占用的长宽\n        # font = ImageFont.truetype(\"yahei.ttf\", 36)\n        # size = font.getbbox('test')",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "test",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def test():\n    # Example usage:\n    text_with_html = \"\"\"html\n    <table>\n    <thead>\n    <tr>\n        <th>国家</th>\n        <th>首都</th>\n        <th>人口 (万人)</th>\n        <th>面积 (km²)</th>",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "mixed_text_to_image",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def mixed_text_to_image(content):\n    img_file = os.path.join(os.path.dirname(__file__),'saved') \n    img_file = os.path.join(img_file,'output.png')\n    if is_markdown_table(content) :\n        content = markdown_to_html(content)\n        return html_to_image(content,img_file)\n    if is_html(content):\n        return html_to_image(content,img_file)\n    return None;\ndef markdown_table_to_image(tb_content):",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "markdown_table_to_image",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def markdown_table_to_image(tb_content):\n    img_file = os.path.join(os.path.dirname(__file__),'saved') \n    img_file = os.path.join(img_file,f'md_table_{date()}.png')\n    if is_markdown_table(tb_content) :\n        content = markdown_to_html(content)\n        return html_to_image(content,img_file)\n    return None;\ndef split_tables():\n    text = \"\"\"\n    # 这是一个标题",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "split_tables",
        "kind": 2,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "def split_tables():\n    text = \"\"\"\n    # 这是一个标题\n    这是一段正文。\n    | 姓名 | 年龄 | 性别 |\n    | ---- | ---- | ---- |\n    | 张三 | 18   | 男   |\n    | 李四 | 19   | 女   |\n    | 王五 | 20   | 男   |\n    \"\"\"",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "test_in",
        "kind": 5,
        "importPath": "d__mixedtext_to_image",
        "description": "d__mixedtext_to_image",
        "peekOfCode": "test_in = \"\"\"\n@Akun~~~\n以下是根据您提供的信息从网页中提取的数据并以表格形式组织的HTML：\n| 国家 | 首 都 | 人口 (万) | 面积 (km²) |\n| :--: | :--: | :--: | :--: |\n| 中国 | 北京 | 14.11 | 963.78 |\n| 美国 | 华盛顿特区 | 3302.37 | 983623.78 |\n| 俄罗斯 | 莫斯科 | 1447.3 | 1709827.4 |\n| 印度 | 新德里 | 14687.4 | 3285636.47 |\n| 巴西 | 巴西利亚 | 22235.4 | 854724.39 |",
        "detail": "d__mixedtext_to_image",
        "documentation": {}
    },
    {
        "label": "MyFileStory",
        "kind": 6,
        "importPath": "file_store",
        "description": "file_store",
        "peekOfCode": "class MyFileStory(object) :\n    def __init__(self):\n        self.curdir = os.path.dirname(__file__)\n        self.saveFolder = os.path.join(self.curdir, 'saved')\n        self.saveSubFolders = {'webwxgeticon': 'icons', 'webwxgetheadimg': 'headimgs',      'webwxgetmsgimg': 'msgimgs', 'webwxgetvideo': 'videos',\n        'webwxgetvoice': 'voices', '_showQRCodeImg': 'qrcodes'}\n    def _save_file(self, filename, data, api=None):\n        fn = filename\n        if self.saveSubFolders[api]:\n            dirName = os.path.join(self.saveFolder, self.saveSubFolders[api])",
        "detail": "file_store",
        "documentation": {}
    },
    {
        "label": "HeadImgManager",
        "kind": 6,
        "importPath": "head_img_manager",
        "description": "head_img_manager",
        "peekOfCode": "class HeadImgManager(object):\n    def __init__(self, conn, groupHostUrl):\n        super().__init__()\n        self.curdir = os.path.dirname(__file__)\n        self.saveFolder = os.path.join(self.curdir, 'saved')\n        self.conn = conn\n        #创建用于记录avatar的表\n        self._create_table_avatar()\n        self.my_store = MyFileStory()\n        self.tencent = ApiTencent(groupHostUrl)",
        "detail": "head_img_manager",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "UserManager",
        "description": "UserManager",
        "peekOfCode": "class UserManager:\n    def __init__(self, groupx):\n        self.groupx = groupx\n        self.user_knowledge = {}\n        self.doctor_of_user={}\n        self.doctor_of_group={}\n        self.group_info ={}\n        self.users={}\n    def should_update(self, user_id):\n        if user_id in self.user_knowledge:",
        "detail": "UserManager",
        "documentation": {}
    },
    {
        "label": "UserRefreshThread",
        "kind": 6,
        "importPath": "user_refresh_thread",
        "description": "user_refresh_thread",
        "peekOfCode": "class UserRefreshThread(object):\n    def __init__(self, conn, config):\n        super().__init__()\n        #保存定时任务回调\n        self._config = config\n        self._conn = conn\n        self.groupxHostUrl = self._config.get(\"groupx_host_url\")\n        self.groupx = ApiGroupx(self.groupxHostUrl)\n        self.tencent = ApiTencent(self.groupxHostUrl)\n        self.img_service = HeadImgManager(conn, self.groupxHostUrl)",
        "detail": "user_refresh_thread",
        "documentation": {}
    }
]